# DX@Scale CI/CD Template for GitHub
#----------------------------------------------------------------------------------------------------
# Maintained by @aly76 for DX@Scale
# Follows reference pipeline available at docs.dxatscale.io
#
#-----------------------------------------------------------------------------------------------------
# To know more about dxatscale, visit https://docs.dxatscale.io
# To know more on sfpowerscripts, visit- https://sfpowerscripts.dxatscale.io/
# To know more on sfpowerkit, visit- https://github.com/Accenture/sfpowerkit

# This pipeline quickbuilds, deploy to DEV, builds and publishes packages to artifact repository

name: 'DOH - CI Pipeline - master branch - build & publish / CD Pipeline - release to ST & SIT - Auto Triggered'


on:
  push:
    branches:
      - master

  workflow_dispatch:

#Set the environment variables for tracking metrics
#env:
  #SFPOWERSCRIPTS_NEWRELIC: 'true'
  #SFPOWERSCRIPTS_NEWRELIC_API_KEY: '${{ secrets.NEWRELIC_INSIGHT_INSERT_KEYS }}'
  #SFPOWERSCRIPTS_DATADOG: 'true'
  #SFPOWERSCRIPTS_DATADOG_HOST: '${{ secrets.DATADOG_HOST }}'
  #SFPOWERSCRIPTS_DATADOG_API_KEY: '${{ secrets.DATADOG_API_KEY }}'

jobs:
  buildAndPublish:
    name: 'Build and Publish'
    runs-on: ubuntu-latest
    container: dxatscale/sfpowerscripts
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Authenticate Dev Hub'
        run: |
          echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
          sfdx auth:sfdxurl:store -f authfile -a devhub

      - name: 'Create packages'
        id: sfpowerscripts-build
        run: |
          sfdx sfpowerscripts:orchestrator:build -v devhub --diffcheck --branch ${GITHUB_REF#refs/heads/} --buildnumber ${GITHUB_RUN_ID}

      # Publish artifacts
      - uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: artifacts

      - name: Authenticate to NPM registry
        run: |
           echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" > ~/.npmrc
           echo  "_authToken=${AUTH_TOKEN}" >> ~/.npmrc
        env:
          AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Publish
        run: |
          sfdx sfpowerscripts:orchestrator:publish -d artifacts --npm --scope @${{ github.repository_owner }}  --gittag --pushgittag

  ST:
    runs-on: ubuntu-latest
    container: dxatscale/sfpowerscripts
    if: github.ref == 'refs/heads/master'
    environment:
      name: ST
    needs: buildAndPublish
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Authenticate to ST sandbox
        run: |
          echo "${{ secrets.ST_SFDX_AUTH_URL }}" > ./authfile
          sfdx auth:sfdxurl:store -f ./authfile -a st

      - name: Authenticate to NPM registry
        run: |
           echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" > ~/.npmrc
           echo  "_authToken=${AUTH_TOKEN}" >> ~/.npmrc
        env:
          AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Release to environment
      - name: 'Release to ST'
        run: 'sfdx sfpowerscripts:orchestrator:release -u st -p release-definitions/release.yml --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog -g "::group::,::endgroup::"'


  SIT:
    runs-on: ubuntu-latest
    container: dxatscale/sfpowerscripts
    if: github.ref == 'refs/heads/master'
    environment:
      name: SIT
    needs: ST

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0


      - name: Authenticate to SIT sandbox
        run: |
          echo "${{ secrets.SIT_SFDX_AUTH_URL }}" > ./authfile
          sfdx auth:sfdxurl:store -f ./authfile -a sit

      - name: Authenticate to NPM registry
        run: |
           echo "@${{ github.repository_owner }}:registry=https://npm.pkg.github.com" > ~/.npmrc
           echo  "_authToken=${AUTH_TOKEN}" >> ~/.npmrc
        env:
          AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # Release to environment
      - name: 'Release to SIT'
        run: 'sfdx sfpowerscripts:orchestrator:release -u sit -p release-definitions/release.yml --npm --scope ${{ github.repository_owner }} --generatechangelog --branchname changelog -g "::group::,::endgroup::" '



